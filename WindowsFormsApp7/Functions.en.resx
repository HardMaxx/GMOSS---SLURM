<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>